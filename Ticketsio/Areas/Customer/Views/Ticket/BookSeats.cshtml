@{
    var movie = ViewData["Movie"] as Ticketsio.Models.Movie;
    var seats = ViewData["Seats"] as List<Ticketsio.Models.Seat>;

    // Group seats by row letter (assuming SeatNumber format is like "A1", "B3", etc.)
    var groupedSeats = seats?.GroupBy(s => s.SeatNumber[0]).OrderBy(g => g.Key);
}

<h2 class="text-center mb-4">Select Your Seats for @movie.Name</h2>

<form asp-area="Customer" asp-controller="Ticket" asp-action="BookSeats" method="post">
    <input type="hidden" name="MovieId" value="@movie.Id" />

    <div class="seat-layout">
        @if (seats == null || !seats.Any())
        {
            <p style="color: red;">No seats available for this movie.</p>
        }
        else
        {
            @foreach (var row in groupedSeats)
            {
                <div class="seat-row">
                    <span class="row-label">@row.Key</span> <!-- Display Row Letter -->
                    @foreach (var seat in row.OrderBy(s => int.Parse(s.SeatNumber.Substring(1))))
                    {
                        <div class="seat @(seat.IsBooked ? "booked" : "available")" data-seat-id="@seat.Id" onclick="toggleSeat(this)">
                            @seat.SeatNumber
                            <input type="checkbox" name="SelectedSeatsList" value="@seat.Id" hidden />
                        </div>
                    }
                </div>
            }
        }
    </div>

    <input type="hidden" id="selectedSeatsInput" name="SelectedSeatsList" />

    <button type="submit" class="btn btn-primary mt-3">Book Selected Seats</button>
</form>

<style>
    .seat-layout {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 10px;
        max-width: 600px;
        margin: 0 auto;
    }

    .seat-row {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .row-label {
        font-weight: bold;
        font-size: 18px;
        margin-right: 10px;
    }

    .seat {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 40px;
        height: 40px;
        background: #28a745;
        color: white;
        border-radius: 5px;
        text-align: center;
        cursor: pointer;
        user-select: none;
        transition: background 0.3s;
    }

        .seat.booked {
            background: #dc3545;
            cursor: not-allowed;
            pointer-events: none;
        }

        .seat.selected {
            background: #ffcc00;
            color: black;
            font-weight: bold;
        }
</style>

<script>
    function toggleSeat(element) {
        if (!element.classList.contains("booked")) {
            element.classList.toggle("selected");

            let seatId = element.getAttribute("data-seat-id");
            let selectedSeatsInput = document.getElementById("selectedSeatsInput");

            let selectedSeats = selectedSeatsInput.value ? selectedSeatsInput.value.split(",") : [];

            if (element.classList.contains("selected")) {
                selectedSeats.push(seatId);
            } else {
                selectedSeats = selectedSeats.filter(id => id !== seatId);
            }

            selectedSeatsInput.value = selectedSeats.join(",");
        }
    }
</script>
